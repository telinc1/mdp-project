name: Docker

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  trivy:
    strategy:
      matrix:
        repo: [game, game-discord, game-web, web]
    name: Trivy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build image
        run: docker build -t "${{ matrix.repo }}:ci" repos/${{ matrix.repo }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ matrix.repo }}:ci'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
  push:
    strategy:
      matrix:
        repo: [game, game-discord, game-web, web]
    name: Push to Docker repository
    needs: trivy
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: wwtbam-ecr
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:${{ matrix.repo }}-$IMAGE_TAG repos/${{ matrix.repo }}
          docker push $REGISTRY/$REPOSITORY:${{ matrix.repo }}-$IMAGE_TAG
